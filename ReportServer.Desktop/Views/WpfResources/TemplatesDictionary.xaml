<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:ReportServer.Desktop.Views.WpfResources" xmlns:ns1="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:ns2="clr-namespace:ReportServer.Desktop.Entities" xmlns:ns3="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
  <ns0:IntMsToMinsConverter x:Key="IntMsToMinsConverter"/>
  <ns0:NullToVisibility x:Key="NullToVisibility"/>
  <ns0:IntToVisiblity x:Key="IntToVisiblity"/>
  <ns0:ReportTypeToVisiblity x:Key="ReportTypeToVisiblity"/>
  <ns0:ParsingCategoryToBool x:Key="ParsingCategoryToBool"/>
  <ns0:IsRangeToVisibility x:Key="IsRangeToVisibility"/>
  <ns0:RangeToString x:Key="TwoBoxesConverter"/>
  <ns0:IsNotValueToVisibility x:Key="IsNotValueToVisibility"/>
  <ns0:MoreThenOneToVisibility x:Key="MoreThenOneToVisibility"/>
  <ns0:OperInstancesView x:Key="OperInstancesView"/>
  <ns0:SelectedInstanceFullView x:Key="SelectedInstanceFullView"/>
  <ns0:SelectedTaskInstancesView x:Key="SelectedTaskInstancesView"/>
  <ns0:TextBoxInputBehavior x:Key="TextBoxInputBehavior"/>
  <ns0:TaskIdAndRoleToVisMultiConverter x:Key="TaskIdAndRoleToVisMultiConverter"/>
  <ns0:InstanceStateAndRoleToVisMultiConverter x:Key="InstanceStateAndRoleToVisMultiConverter"/>
  <ns0:TaskListView x:Key="TaskListView"/>
  <ns1:PackIconModern x:Key="CursorHand" Kind="CursorHand"/>
  <ObjectDataProvider x:Key="ParsingEnum" ObjectType="{x:Type ns2:ParsingCategory}" MethodName="GetValues">
    <ObjectDataProvider.MethodParameters>
      <x:Type Type="ns2:ParsingCategory"/>
    </ObjectDataProvider.MethodParameters>
  </ObjectDataProvider>
  <ObjectDataProvider x:Key="OperModeEnum" ObjectType="{x:Type ns2:OperMode}" MethodName="GetValues">
    <ObjectDataProvider.MethodParameters>
      <x:Type Type="ns2:OperMode"/>
    </ObjectDataProvider.MethodParameters>
  </ObjectDataProvider>
  <Style x:Key="MyColumnHeader" BasedOn="{StaticResource  MahApps.Styles.DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Height" Value="30"/>
    <Setter Property="Background" Value="#F5F5F5"/>
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
  </Style>
  <Style x:Key="MyCell" TargetType="DataGridCell">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Grid Background="{TemplateBinding Background}">
            <ContentPresenter VerticalAlignment="Center"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ns3:ToggleSwitch}" BasedOn="{StaticResource MahApps.Styles.ToggleSwitch}">
    <Setter Property="FontWeight" Value="Normal"/>
    <Setter Property="FontSize" Value="12"/>
  </Style>
  <Style TargetType="{x:Type ComboBox}">
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
  </Style>
  <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button}">
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Background" Value="#F5F5F5"/>
    <Setter Property="Margin" Value="2.5"/>
    <Setter Property="FontWeight" Value="DemiBold"/>
    <Setter Property="MaxWidth" Value="150"/>
  </Style>
  <Style TargetType="{x:Type DataGrid}">
    <Setter Property="CellStyle" Value="{StaticResource MyCell}"/>
    <Setter Property="ColumnHeaderStyle" Value="{StaticResource MyColumnHeader}"/>
  </Style>
  <Style TargetType="TextBlock">
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="TextWrapping" Value="Wrap"/>
  </Style>
  <Style TargetType="Label">
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="FontWeight" Value="DemiBold"/>
    <Setter Property="Background" Value="#F5F5F5"/>
    <Setter Property="Margin" Value="2"/>
  </Style>
  <Style TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="VerticalAlignment" Value="Stretch"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="TextWrapping" Value="Wrap"/>
    <Setter Property="AcceptsReturn" Value="True"/>
  </Style>
  <Style x:Key="NoWrapTextBox" TargetType="TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}">
    <Setter Property="TextWrapping" Value="NoWrap"/>
    <Setter Property="AcceptsReturn" Value="False"/>
  </Style>
  <Style TargetType="Border">
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="BorderBrush" Value="#F5F5F5"/>
    <Setter Property="Margin" Value="0.5"/>
  </Style>
  <Style TargetType="CheckBox">
    <Setter Property="Margin" Value="5 0 0 0"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>
  <Style TargetType="Popup">
    <Setter Property="HorizontalAlignment" Value="Right"/>
    <Setter Property="Placement" Value="Right"/>
    <Setter Property="FlowDirection" Value="RightToLeft"/>
  </Style>
  <Style TargetType="ListViewItem">
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListViewItem">
          <Border Name="Border" BorderBrush="Transparent" BorderThickness="0">
            <ContentPresenter/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate DataType="{x:Type ns2:ApiOperTemplate}"/>
</ResourceDictionary>