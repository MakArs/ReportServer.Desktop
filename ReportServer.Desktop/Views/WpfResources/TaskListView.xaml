<UserControl x:Class="ReportServer.Desktop.Views.WpfResources.TaskListView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ns0="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns:ns1="clr-namespace:ReportServer.Desktop.Views.WpfResources" xmlns:ns2="http://schemas.microsoft.com/xaml/behaviors"  xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:ns3="clr-namespace:ReportServer.Desktop.AmmyExpression">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="TemplatesDictionary.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <CollectionViewSource x:Key="TasksView" Source="{Binding Path=Tasks}">
        <CollectionViewSource.GroupDescriptions>
          <PropertyGroupDescription PropertyName="GroupName"/>
        </CollectionViewSource.GroupDescriptions>
      </CollectionViewSource>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="40"/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <Grid ColumnSpan="4" Background="#F5F5F5">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Label Grid.Column="4" Content="Current tasks list" Margin="2 2 0 2"/>
      <Button Padding="5">
        <Button.Visibility>
          <Binding Path="Shell.Role" Converter="{x:Static ns3:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;0&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;binary op=&quot;Equal&quot;&gt;&lt;parameter name=&quot;type&quot; type=&quot;ReportServer.Desktop.Entities.ServiceUserRole&quot; /&gt;&lt;prim val=&quot;ReportServer.Desktop.Entities.ServiceUserRole.Editor&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;ReportServer.Desktop.Entities.ServiceUserRole&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Collapsed&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;type&quot; type=&quot;ReportServer.Desktop.Entities.ServiceUserRole&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </Button.Visibility>
        <Button.Command>
          <Binding Path="Shell.CreateTaskCommand"/>
        </Button.Command>Add new task
      </Button>
      <Button Grid.Column="1" Padding="5">
        <Button.Visibility>
          <Binding Path="Shell.Role" Converter="{x:Static ns3:ExpressionConverter.Instance}" ConverterParameter="&lt;expr id=&quot;0&quot;&gt;&lt;lambda isaction=&quot;False&quot;&gt;&lt;ternary&gt;&lt;binary op=&quot;Equal&quot;&gt;&lt;parameter name=&quot;type&quot; type=&quot;ReportServer.Desktop.Entities.ServiceUserRole&quot; /&gt;&lt;prim val=&quot;ReportServer.Desktop.Entities.ServiceUserRole.Editor&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;ReportServer.Desktop.Entities.ServiceUserRole&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/binary&gt;&lt;prim val=&quot;System.Windows.Visibility.Visible&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;prim val=&quot;System.Windows.Visibility.Collapsed&quot; isnull=&quot;False&quot;&gt;&lt;typeinfo typename=&quot;System.Windows.Visibility&quot; isarray=&quot;False&quot;&gt;&lt;/typeinfo&gt;&lt;/prim&gt;&lt;/ternary&gt;&lt;parameter name=&quot;type&quot; type=&quot;ReportServer.Desktop.Entities.ServiceUserRole&quot; /&gt;&lt;/lambda&gt;&lt;/expr&gt;"/>
        </Button.Visibility>
        <Button.Command>
          <Binding Path="CopyTaskCommand"/>
        </Button.Command>Copy selected task
      </Button>
      <Label Grid.Column="2" Content="Expand all groups" Margin="2 2 0 2"/>
      <ns0:ToggleSwitchButton Grid.Column="3" Padding="3">
        <ns0:ToggleSwitchButton.IsChecked>
          <Binding Path="DataContext.AllGroupsExpanded" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" UpdateSourceTrigger="PropertyChanged"/>
        </ns0:ToggleSwitchButton.IsChecked>
      </ns0:ToggleSwitchButton>
    </Grid>
    <DataGrid Grid.Row="1" ColumnWidth="*" HorizontalAlignment="Stretch" RowBackground="#F5F5F5" Background="White" MinRowHeight="25" AutoGenerateColumns="False" GridLinesVisibility="All" RowHeaderWidth="0" CanUserAddRows="False" CanUserDeleteRows="False" SelectionMode="Single" IsReadOnly="True" HorizontalGridLinesBrush="Gray" VerticalGridLinesBrush="Gray" RowHeight="{x:Static sys:Double.NaN}">
      <DataGrid.ItemsSource>
        <Binding Source="{StaticResource TasksView}"/>
      </DataGrid.ItemsSource>
      <DataGrid.SelectedItem>
        <Binding Path="SelectedTask"/>
      </DataGrid.SelectedItem>
      <DataGrid.InputBindings>
        <MouseBinding MouseAction="LeftDoubleClick">
          <MouseBinding.Command>
            <Binding Path="EditTaskCommand"/>
          </MouseBinding.Command>
        </MouseBinding>
        <KeyBinding Key="Delete" Command="ApplicationCommands.NotACommand"/>
      </DataGrid.InputBindings>
      <DataGrid.Columns>
        <DataGridTextColumn MinWidth="150" Width="0.25*">
          <DataGridTextColumn.HeaderStyle>
            <Style BasedOn="{StaticResource MyColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
              <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
          </DataGridTextColumn.HeaderStyle>
          <DataGridTextColumn.HeaderTemplate>
            <DataTemplate>
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock Margin="2 0 20 0">Id</TextBlock>
                <TextBox TextWrapping="NoWrap" Background="White" HorizontalAlignment="Right" AcceptsReturn="False" TextAlignment="Left" Width="90" FontWeight="Normal" BorderThickness="0" Padding="1 0 1 3" ns0:TextBoxHelper.Watermark="Search" ns0:TextBoxHelper.ClearTextButton="True">
                  <TextBox.Text>
                    <Binding Path="DataContext.TaskIdSearchString" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True"/>
                  </TextBox.Text>
                  <ns2:Interaction.Behaviors>
                    <ns1:TextBoxInputBehavior InputMode="NullableDigitInput"/>
                  </ns2:Interaction.Behaviors>
                </TextBox>
              </StackPanel>
            </DataTemplate>
          </DataGridTextColumn.HeaderTemplate>
          <DataGridTextColumn.Binding>
            <Binding Path="Id"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn MinWidth="250" Width="0.6*">
          <DataGridTextColumn.HeaderStyle>
            <Style BasedOn="{StaticResource MyColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
              <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
          </DataGridTextColumn.HeaderStyle>
          <DataGridTextColumn.HeaderTemplate>
            <DataTemplate>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                  <TextBlock TextAlignment="Center" Margin="2 0 20 0">Name</TextBlock>
                  <TextBox Grid.Column="1" TextWrapping="NoWrap" Background="White" HorizontalAlignment="Right" AcceptsReturn="False" TextAlignment="Left" Width="150" FontWeight="Normal" BorderThickness="0" Padding="1 0 1 3" ns0:TextBoxHelper.Watermark="Search" ns0:TextBoxHelper.ClearTextButton="True">
                    <TextBox.Text>
                      <Binding Path="DataContext.TaskNameSearchString" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True"/>
                    </TextBox.Text>
                  </TextBox>
                </StackPanel>
              </Grid>
            </DataTemplate>
          </DataGridTextColumn.HeaderTemplate>
          <DataGridTextColumn.Binding>
            <Binding Path="Name"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Schedule" Width="0.35*">
          <DataGridTextColumn.Binding>
            <Binding Path="Schedule"/>
          </DataGridTextColumn.Binding>
        </DataGridTextColumn>
        <DataGridTextColumn Header="Operations">
          <DataGridTextColumn.Binding>
            <Binding Path="Operations"/>
          </DataGridTextColumn.Binding>
          <DataGridTextColumn.ElementStyle>
            <Style>
              <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
            </Style>
          </DataGridTextColumn.ElementStyle>
        </DataGridTextColumn>
      </DataGrid.Columns>
      <DataGrid.GroupStyle>
        <GroupStyle>
          <GroupStyle.ContainerStyle>
            <Style TargetType="{x:Type GroupItem}">
              <Setter Property="Margin" Value="0,0,0,3"/>
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander Background="{DynamicResource AccentColorBrush}" BorderBrush="{DynamicResource AccentColorBrush3}" Foreground="{DynamicResource BlackBrush}" BorderThickness="1,1,1,1">
                      <Expander.IsExpanded>
                        <Binding Path="DataContext.AllGroupsExpanded" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}" UpdateSourceTrigger="Explicit" Mode="TwoWay"/>
                      </Expander.IsExpanded>
                      <Expander.Header>
                        <DockPanel>
                          <TextBlock HorizontalAlignment="Left" FontWeight="Bold" Margin="5,0,0,0">
                            <TextBlock.Text>
                              <Binding Path="Name"/>
                            </TextBlock.Text>
                          </TextBlock>
                          <TextBlock HorizontalAlignment="Left" FontWeight="Bold" Margin="5,0,0,0">
                            <TextBlock.Text>
                              <Binding Path="ItemCount" StringFormat="(Count: {0})"/>
                            </TextBlock.Text>
                          </TextBlock>
                        </DockPanel>
                      </Expander.Header>
                      <Expander.Content>
                        <ItemsPresenter/>
                      </Expander.Content>
                    </Expander>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </GroupStyle.ContainerStyle>
        </GroupStyle>
      </DataGrid.GroupStyle>
    </DataGrid>
  </Grid>
</UserControl>